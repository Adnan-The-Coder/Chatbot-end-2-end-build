name: Build and deploy pipeline

on:
  push:
    branches: ["main"]

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (cache only)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ml-lr-chatbot-api:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ml-lr-chatbot-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ml-lr-chatbot-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  render-deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deploy
        id: deploy
        run: |
          echo "üöÄ Triggering deployment on Render..."

          DEPLOY_RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -d '{}')

          # Split response and status code
          HTTP_BODY=$(echo "$DEPLOY_RESPONSE" | head -n 1)
          HTTP_STATUS=$(echo "$DEPLOY_RESPONSE" | tail -n1)

          echo "üì¶ Render response body:"
          echo "$HTTP_BODY"

          echo "üì° Render response status: $HTTP_STATUS"

          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "‚ùå Render deployment trigger failed with status $HTTP_STATUS"
            exit 1
          else
            echo "‚úÖ Render deployment successfully triggered."
          fi
